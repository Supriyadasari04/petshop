admin_dashboard.py :

import streamlit as st

# Set Streamlit page configuration and disable sidebar
st.set_page_config(page_title="Admin Dashboard - Paws & Claws Pet Shop", page_icon="🐾", menu_items=None)

# Your page content here
st.title("Admin Dashboard")
# Add the rest of your content...

# Function to display the Admin Dashboard
def admin_home():
    st.title("Admin Dashboard - Paws & Claws Pet Shop")
    st.write("Welcome to the Admin dashboard! Choose an option to manage the system.")
    
    # Buttons for each section with links to respective pages
    col1, col2 = st.columns(2)

    with col1:
        st.page_link("pages/manage_inventory.py", label="🛒 Manage Inventory", icon="🐾")
        st.page_link("pages/salon_vet_appointments.py", label="🧑‍⚕️ Salon & Vet Appointments", icon="🐾")
        

    with col2:
        st.page_link("pages/manage_users.py", label="👤 Manage Users", icon="🐾")
        st.page_link("pages/view_orders.py", label="📋 View Orders", icon="🐾")
    

# You can call admin_home() function to run this code
admin_home()
st.page_link("main.py", label="⬅️ Back to Main Page", icon="🏠")


-----------------adoption_center.py :
import streamlit as st

# Set Streamlit page configuration and disable sidebar
st.set_page_config(page_title="Pet Adoption Center - Paws & Claws Pet Shop", page_icon="🐾", menu_items=None)


st.title("🦸 Pet Adoption Center")
st.write("Find your perfect pet companion!")

# Example pet listings
st.markdown("""
### 🐶 Max - Golden Retriever  
- Age: 2 years  
- Vaccinated: ✅ Yes  
- Adoption Fee: $200  

### 🐱 Whiskers - Persian Cat  
- Age: 3 years  
- Vaccinated: ✅ Yes  
- Adoption Fee: $150  
""")
st.page_link("pages/customer_home.py", label="⬅️ Back to Customer Home Page", icon="🏠")

---------------------------------customer_home.py :
import streamlit as st

# Set Streamlit page configuration and disable sidebar
st.set_page_config(page_title="Customer ahaome Page - Paws & Claws Pet Shop", page_icon="🐾", menu_items=None)


st.title("🐶 Welcome to Paws & Claws Pet Shop 🐱")
st.write("Choose a service to explore:")

col1, col2 = st.columns(2)

with col1:
    st.page_link("pages/adoption_center.py", label="🦸 Pet Adoption Center", icon="🐾")
    st.page_link("pages/pet_salon.py", label="💇‍♀️ Pet Salon & Grooming", icon="✂️")
    st.page_link("pages/my_orders.py", label="📦 My Orders", icon="📋")

with col2:
    st.page_link("pages/shop.py", label="🛒 Shop (Pet Food & Accessories)", icon="🛍️")
    st.page_link("pages/vet_consultation.py", label="🐾 Veterinary Consultation", icon="⚕️")
    st.page_link("pages/profile.py", label="👤 Profile Page", icon="👥")

    
    


st.page_link("main.py", label="⬅️ Back to Main Page", icon="🏠")


---------------------------manage_inventory.py :
import streamlit as st

# Set Streamlit page configuration and disable sidebar
st.set_page_config(page_title="🛒 Manage Inventory - Paws & Claws Pet Shop", page_icon="🐾", menu_items=None)


st.title("🛒 Manage Inventory")
st.write("Add, update, or remove products.")



# Inventory management options
st.write("🔹 Inventory Overview:")
# Placeholder for inventory table
st.write("(Inventory data table will be displayed here)")

st.button("➕ Add New Item")
st.button("✏️ Edit Selected Item")
st.button("🗑️ Delete Selected Item")

# Back to Admin Dashboard
st.page_link("pages/admin_dashboard.py", label="⬅️ Back to Admin Dashboard", icon="🏠")
----------------------manage_users.py:
import streamlit as st

# Set Streamlit page configuration and disable sidebar
st.set_page_config(page_title="👤 Manage Users - Paws & Claws Pet Shop", page_icon="🐾", menu_items=None)


st.title("👤 Manage Users")
st.write("View, edit, or delete user accounts.")



# User management options
st.write("🔹 List of registered users:")
# Placeholder for user table
st.write("(User data table will be displayed here)")

st.button("➕ Add New User")
st.button("✏️ Edit Selected User")
st.button("🗑️ Delete Selected User")


# Back to Admin Dashboard
st.page_link("pages/admin_dashboard.py", label="⬅️ Back to Admin Dashboard", icon="🏠")
----------------------------------my_orders.py :
import streamlit as st

# Set Streamlit page configuration and disable sidebar
st.set_page_config(page_title="📦 My Orders - Paws & Claws Pet Shop", page_icon="🐾", menu_items=None)


st.title("📦 My Orders")
st.write("Track your orders and adoptions.")
st.page_link("pages/customer_home.py", label="⬅️ Back to Customer Home Page", icon="🏠")


--------------------------pet-salon.py:
import streamlit as st

# Set Streamlit page configuration and disable sidebar
st.set_page_config(page_title="💇‍♀️ Pet Salon & Grooming - Paws & Claws Pet Shop", page_icon="🐾", menu_items=None)


st.title("💇‍♀️ Pet Salon & Grooming")
st.write("Book a grooming session for your pet.")

st.markdown("""
### Services Available:
- Bath & Blow Dry - $25
- Nail Trimming - $15
- Full Grooming - $50
""")
st.page_link("pages/customer_home.py", label="⬅️ Back to Customer Home Page", icon="🏠")
-------------------------------profile.py
import streamlit as st

# Set Streamlit page configuration and disable sidebar
st.set_page_config(page_title="👤 Profile Page - Paws & Claws Pet Shop", page_icon="🐾", menu_items=None)


st.title("👤 Profile Page")
st.write("View your profile and order history.")
st.page_link("pages/customer_home.py", label="⬅️ Back to Customer Home Page", icon="🏠")
------------------------------salon_vet_appointments.py
import streamlit as st

# Set Streamlit page configuration and disable sidebar
st.set_page_config(page_title="🧑‍⚕️ Salon & Vet Appointments - Paws & Claws Pet Shop", page_icon="🐾", menu_items=None)


st.title("🧑‍⚕️ Salon & Vet Appointments")
st.write("Manage pet salon and vet appointment bookings.")



# Appointments overview
st.write("🔹 Upcoming Appointments:")
# Placeholder for appointment list
st.write("(Appointment schedule will be displayed here)")

st.button("✅ Confirm Selected Appointment")
st.button("🚫 Cancel Selected Appointment")


# Back to Admin Dashboard
st.page_link("pages/admin_dashboard.py", label="⬅️ Back to Admin Dashboard", icon="🏠")
---------------------------shop.py:
import streamlit as st

# Set Streamlit page configuration and disable sidebar
st.set_page_config(page_title="🛒 Pet Shop - Paws & Claws Pet Shop", page_icon="🐾", menu_items=None)


st.title("🛒 Pet Shop")
st.write("Browse our pet food and accessories.")

st.markdown("""
### 🥩 Premium Dog Food - $20  
### 🐟 Cat Tuna Treats - $15  
### 🛏️ Cozy Pet Bed - $30  
""")
st.page_link("pages/customer_home.py", label="⬅️ Back to Customer Home Page", icon="🏠")
----------------------------------------vet_consultation.py:
import streamlit as st

# Set Streamlit page configuration and disable sidebar
st.set_page_config(page_title="🐾 Veterinary Consultation - Paws & Claws Pet Shop", page_icon="🐾", menu_items=None)


st.title("🐾 Veterinary Consultation")
st.write("Book an appointment with a veterinarian.")

st.markdown("""
### Available Vets:
- Dr. Emily (Mon-Wed)
- Dr. John (Thu-Sat)

**Consultation Fee:** $40  
""")
st.page_link("pages/customer_home.py", label="⬅️ Back to Customer Home Page", icon="🏠")
----------------------------------view_orders.py:
import streamlit as st

# Set Streamlit page configuration and disable sidebar
st.set_page_config(page_title="📋 View Orders - Paws & Claws Pet Shop", page_icon="🐾", menu_items=None)


st.title("📋 View Orders")
st.write("Review and manage customer orders.")



# Orders overview
st.write("🔹 List of pending & completed orders:")
# Placeholder for order table
st.write("(Order data table will be displayed here)")

st.button("✅ Approve Selected Order")
st.button("🚫 Cancel Selected Order")


# Back to Admin Dashboard
st.page_link("pages/admin_dashboard.py", label="⬅️ Back to Admin Dashboard", icon="🏠")
----------------------------------main.py:
import streamlit as st
import sqlite3

# Set Streamlit page configuration
st.set_page_config(page_title="Paws & Claws Pet Shop", page_icon="🐾", menu_items=None)

# Function to authenticate Admin
def authenticate_admin(admin_id, password):
    conn = sqlite3.connect('petshop.db')
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM admins WHERE admin_id = ? AND password = ?', (admin_id, password))
    admin = cursor.fetchone()
    conn.close()
    return admin

# Function to authenticate Customer
def authenticate_customer(username, password):
    conn = sqlite3.connect('petshop.db')
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM customers WHERE username = ? AND password = ?', (username, password))
    customer = cursor.fetchone()
    conn.close()
    return customer

# Function to register a new customer
def register_customer(username, password, name, email):
    conn = sqlite3.connect('petshop.db')
    cursor = conn.cursor()
    cursor.execute('INSERT INTO customers (username, password, name, email) VALUES (?, ?, ?, ?)', 
                   (username, password, name, email))
    conn.commit()
    conn.close()

# Title
st.title("🐶 Welcome to Paws & Claws Pet Shop 🐱")
st.write("Your one-stop destination for pet adoption, food, grooming, and veterinary services.")

# Quote Section
st.markdown(
    """
    *"Animals are such agreeable friends—they ask no questions; they pass no criticisms."*  
    — George Eliot  
    """
)

st.markdown("---")

# Buttons for Login and Register
col1, col2 = st.columns(2)

with col1:
    if st.button("🔑 Login", use_container_width=True):
        st.session_state.page = "login"
        st.rerun()

with col2:
    if st.button("📝 Register", use_container_width=True):
        st.session_state.page = "register"
        st.rerun()

# Handle login
if st.session_state.get("page") == "login":
    st.header("Login Page")
    user_type = st.radio("Select user type:", ["Admin", "Customer"])

    username = st.text_input("Username")
    password = st.text_input("Password", type="password")

    if user_type == "Admin":
        admin_id = st.text_input("Admin ID")

    if st.button("Login"):
        if user_type == "Admin":
            if authenticate_admin(admin_id, password):
                st.session_state.page = "admin_dashboard"
                st.session_state.user_type = "admin"
                st.session_state.username = admin_id
                st.rerun()
            else:
                st.error("Invalid Admin credentials. Please try again.")

        elif user_type == "Customer":
            if authenticate_customer(username, password):
                st.session_state.page = "customer_home"
                st.session_state.user_type = "customer"
                st.session_state.username = username
                st.rerun()
            else:
                st.error("Invalid Customer credentials. Please try again.")

# Handle registration
elif st.session_state.get("page") == "register":
    st.header("Register Page")
    name = st.text_input("Name")
    email = st.text_input("Email")
    username = st.text_input("Username")
    password = st.text_input("Password", type="password")

    if st.button("Register"):
        register_customer(username, password, name, email)
        st.success("Registration successful! Please login now.")
        st.session_state.page = "login"
        st.rerun()

# Redirect to respective dashboards
elif st.session_state.get("page") == "admin_dashboard":
    st.switch_page("pages/admin_dashboard.py")

elif st.session_state.get("page") == "customer_home":
    st.switch_page("pages/customer_home.py")
